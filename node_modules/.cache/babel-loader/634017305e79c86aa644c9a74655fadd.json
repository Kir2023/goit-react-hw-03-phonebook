{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041A\\u0438\\u0440\\u0438\\u043B\\u043B\\\\Documents\\\\Projects VSCode\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.jsx\";\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport css from './ContactForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: '',\n      number: ''\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const form = e.currentTarget;\n      this.props.handleSubmit(this.state);\n      form.reset();\n    };\n  }\n\n  render() {\n    const {\n      name,\n      number\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: css.form,\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: css.formLabel,\n        children: \"Name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: css.formName,\n        type: \"text\",\n        name: \"name\",\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' \\\\-][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        required: true,\n        placeholder: \"Enter name\",\n        value: name,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: css.formLabel,\n        children: \"Number \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: css.formNumber,\n        type: \"tel\",\n        name: \"number\",\n        pattern: \"\\\\+?\\\\d{1,4}?[ .\\\\-\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[ .\\\\-\\\\s]?\\\\d{1,4}[ .\\\\-\\\\s]?\\\\d{1,4}[ .\\\\-\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        required: true,\n        placeholder: \"Enter phone number\",\n        value: number,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: css.formBtn,\n        type: \"submit\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nContactForm.propTypes = {\n  handleSubmit: propTypes.func.isRequired\n};","map":{"version":3,"sources":["C:/Users/Кирилл/Documents/Projects VSCode/goit-react-hw-02-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["propTypes","React","Component","css","ContactForm","state","name","number","handleChange","e","value","target","setState","handleSubmit","preventDefault","form","currentTarget","props","reset","render","formLabel","formName","formNumber","formBtn","func","isRequired"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,0BAAhB;;AAEA,OAAO,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SACzCG,KADyC,GACjC;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,MAAM,EAAE;AAFF,KADiC;;AAAA,SAMzCC,YANyC,GAM1BC,CAAC,IAAI;AAClB,YAAM;AAAEH,QAAAA,IAAF;AAAQI,QAAAA;AAAR,UAAkBD,CAAC,CAACE,MAA1B;AACA,WAAKC,QAAL,CAAc;AAAE,SAACN,IAAD,GAAQI;AAAV,OAAd;AACD,KATwC;;AAAA,SAWzCG,YAXyC,GAW1BJ,CAAC,IAAI;AAClBA,MAAAA,CAAC,CAACK,cAAF;AACA,YAAMC,IAAI,GAAGN,CAAC,CAACO,aAAf;AACA,WAAKC,KAAL,CAAWJ,YAAX,CAAwB,KAAKR,KAA7B;AACAU,MAAAA,IAAI,CAACG,KAAL;AACD,KAhBwC;AAAA;;AAkBzCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,KAAKF,KAA9B;AAEA,wBACE;AAAM,MAAA,SAAS,EAAEF,GAAG,CAACY,IAArB;AAA2B,MAAA,QAAQ,EAAE,KAAKF,YAA1C;AAAA,8BACE;AAAO,QAAA,SAAS,EAAEV,GAAG,CAACiB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,SAAS,EAAEjB,GAAG,CAACkB,QADjB;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,OAAO,EAAC,0HAJV;AAKE,QAAA,KAAK,EAAC,wIALR;AAME,QAAA,QAAQ,MANV;AAOE,QAAA,WAAW,EAAC,YAPd;AAQE,QAAA,KAAK,EAAEf,IART;AASE,QAAA,QAAQ,EAAE,KAAKE;AATjB;AAAA;AAAA;AAAA;AAAA,cAFF,eAaE;AAAO,QAAA,SAAS,EAAEL,GAAG,CAACiB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAcE;AACE,QAAA,SAAS,EAAEjB,GAAG,CAACmB,UADjB;AAEE,QAAA,IAAI,EAAC,KAFP;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,OAAO,EAAC,oGAJV;AAKE,QAAA,KAAK,EAAC,8FALR;AAME,QAAA,QAAQ,MANV;AAOE,QAAA,WAAW,EAAC,oBAPd;AAQE,QAAA,KAAK,EAAEf,MART;AASE,QAAA,QAAQ,EAAE,KAAKC;AATjB;AAAA;AAAA;AAAA;AAAA,cAdF,eAyBE;AAAQ,QAAA,SAAS,EAAEL,GAAG,CAACoB,OAAvB;AAAgC,QAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA+BD;;AApDwC;AAuD3CnB,WAAW,CAACJ,SAAZ,GAAwB;AACtBa,EAAAA,YAAY,EAAEb,SAAS,CAACwB,IAAV,CAAeC;AADP,CAAxB","sourcesContent":["import propTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport css from './ContactForm.module.css';\r\n\r\nexport class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    this.props.handleSubmit(this.state);\r\n    form.reset();\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className={css.form} onSubmit={this.handleSubmit}>\r\n        <label className={css.formLabel}>Name </label>\r\n        <input\r\n          className={css.formName}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          placeholder=\"Enter name\"\r\n          value={name}\r\n          onChange={this.handleChange}\r\n        />\r\n        <label className={css.formLabel}>Number </label>\r\n        <input\r\n          className={css.formNumber}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          placeholder=\"Enter phone number\"\r\n          value={number}\r\n          onChange={this.handleChange}\r\n        />\r\n        <button className={css.formBtn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  handleSubmit: propTypes.func.isRequired,\r\n};"]},"metadata":{},"sourceType":"module"}